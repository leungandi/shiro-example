#指定securityManager的authenticator实现 
#authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator
securityManager.authenticator=$authenticator

#指定securityManager.authenticator的authenticationStrategy
#FirstSuccessfulStrategy：只要有一个Realm验证成功即可，只返回第一个Realm身份验证成功的认证信息，其他的忽略；
firstSuccessfulStrategy=org.apache.shiro.authc.pam.FirstSuccessfulStrategy
securityManager.authenticator.authenticationStrategy=$firstSuccessfulStrategy

#声明一个realm  
myRealm=com.szl.shiro.example.chapter2.realm.MyRealm
myRealm1=com.szl.shiro.example.chapter2.realm.MyRealm1
myRealm2=com.szl.shiro.example.chapter2.realm.MyRealm2
#指定securityManager的realms实现 ,通过$name来引入之前的realm定义 
securityManager.realms=$myRealm,$myRealm1,$myRealm2