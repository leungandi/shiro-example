[main]
#Shiro提供了三个默认实现：
#DefaultSessionManager：DefaultSecurityManager使用的默认实现，用于JavaSE环境；
#ServletContainerSessionManager：DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用Servlet容器的会话；
#DefaultWebSessionManager：用于Web环境的实现，可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了Servlet容器的会话管理。

sessionManager=org.apache.shiro.web.session.mgt.DefaultWebSessionManager

#sessionIdCookie是sessionManager创建会话Cookie的模板：
sessionIdCookie=org.apache.shiro.web.servlet.SimpleCookie 
  
#sessionIdCookie.name：设置Cookie名字，默认为JSESSIONID；
sessionIdCookie.name=sid 
 
#sessionIdCookie.domain：设置Cookie的域名，默认空，即当前访问的域名；
#sessionIdCookie.domain=

#sessionIdCookie.path：设置Cookie的路径，默认空，即存储在域名根下；
#sessionIdCookie.path= 
 
#sessionIdCookie.maxAge：设置Cookie的过期时间，秒为单位，默认-1表示关闭浏览器时过期Cookie；
sessionIdCookie.maxAge=1800

#sessionIdCookie.httpOnly：如果设置为true，则客户端不会暴露给客户端脚本代码，使用HttpOnly cookie有助于减少某些类型的跨站点脚本攻击；  
sessionIdCookie.httpOnly=true  

sessionManager.sessionIdCookie=$sessionIdCookie
#sessionManager.sessionIdCookieEnabled：是否启用/禁用Session Id Cookie，默认是启用的；  
sessionManager.sessionIdCookieEnabled=true  
securityManager.sessionManager=$sessionManager 

#会话监听器用于监听会话创建、过期及停止事件
sessionListener1=com.szl.shiro.example.chapter10.listener.MyListener
sessionListener2=com.szl.shiro.example.chapter10.listener.MyListener2  
sessionManager.sessionListeners=$sessionListener1,$sessionListener2  

###############################Shiro提供SessionDAO用于会话的CRUD，即DAO（Data Access Object）模式实现#################################
#EnterpriseCacheSessionDAO提供了缓存功能的会话维护，默认情况下使用MapCache实现，内部使用ConcurrentHashMap保存缓存的会话
#如果自定义实现SessionDAO，继承CachingSessionDAO即可
sessionDAO=org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO 
sessionDAO.activeSessionsCacheName=shiro-activeSessionCache
sessionManager.sessionDAO=$sessionDAO  

cacheManager=org.apache.shiro.cache.ehcache.EhCacheManager  
cacheManager.cacheManagerConfigFile=classpath:ehcache.xml  
securityManager.cacheManager = $cacheManager 

###############################Shiro提供Session 会话验证(判断session是否过期)#################################
sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler  
#设置调度时间间隔，单位毫秒，默认就是1小时；
sessionValidationScheduler.interval = 5000 
sessionValidationScheduler.sessionManager=$sessionManager 
#设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期； 
sessionManager.globalSessionTimeout=1800000  
sessionManager.sessionValidationSchedulerEnabled=true  
sessionManager.sessionValidationScheduler=$sessionValidationScheduler     

  
#默认是/login.jsp  
authc.loginUrl=/login  
#通过unauthorizedUrl属性指定如果授权失败时重定向到的地址
roles.unauthorizedUrl=/unauthorized  
perms.unauthorizedUrl=/unauthorized  

[users]  
zhang=123,admin  
wang=123,guest 
 
[roles]  
admin=user:*,menu:*  
guest=guest:*

[urls]  
/logout=logout
/login.jsp=authc
/**=anon